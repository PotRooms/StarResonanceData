syntax = "proto3";

package chat.pb;

message ServerRegisterReq {
    string ServerID = 1;
    string ServerToken = 2;
}

message ServerRegisterRsp {
    enum ServerRegisterCode {
        SUCCESS = 0;
        TOKEN_INVALID = 1;
        ALREADY_REGISTER = 2;
    }
    chat.pb.ServerRegisterRsp.ServerRegisterCode Code = 1;
    string Msg = 2;
    string ServerID = 3;
}

message GetClientTokenReq {
    string ClientID = 1;
}

message GetClientTokenRsp {
    enum GetClientTokenCode {
        SUCCESS = 0;
        INNER_ERR = 1;
        NOT_REGISTER = 2;
    }
    chat.pb.GetClientTokenRsp.GetClientTokenCode Code = 1;
    string msg = 2;
    string ClientToken = 3;
    string ClientID = 4;
}

message CreateChannelReq {
    string ChannelID = 1;
}

message CreateChannelRsp {
    enum CreateChannelCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        ALREADY_CREATE = 2;
    }
    chat.pb.CreateChannelRsp.CreateChannelCode Code = 1;
    string Msg = 2;
    string ChannelID = 3;
}

message DelChannelReq {
    string ChannelID = 1;
}

message DelChannelRsp {
    enum DelChannelCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        CHANNEL_ID_INVALID = 2;
    }
    chat.pb.DelChannelRsp.DelChannelCode Code = 1;
    string Msg = 2;
    string ChannelID = 3;
}

message JoinChannelReq {
    string ChannelID = 1;
    string ClientID = 2;
}

message JoinChannelRsp {
    enum JoinChannelCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        CHANNEL_ID_INVALID = 2;
        JOIN_ALREADY = 3;
        JOIN_GROUP_CHANNEL_FAILED = 4;
    }
    chat.pb.JoinChannelRsp.JoinChannelCode Code = 1;
    string Msg = 2;
    string ChannelID = 3;
    string ClientID = 4;
}

message OutChannelReq {
    string ChannelID = 1;
    string ClientID = 2;
}

message OutChannelRsp {
    enum OutChannelCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        CHANNEL_ID_INVALID = 2;
        NOT_IN_CHANNEL = 3;
    }
    chat.pb.OutChannelRsp.OutChannelCode Code = 1;
    string Msg = 2;
    string ChannelID = 3;
    string ClientID = 4;
}

message GetChannelMemberReq {
    string ChannelID = 1;
}

message GetChannelMemberRsp {
    enum GetChannelMemberCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        CHANNEL_ID_INVALID = 2;
    }
    chat.pb.GetChannelMemberRsp.GetChannelMemberCode Code = 1;
    string Msg = 2;
    repeated string MemberList = 3;
    string ChannelID = 4;
}

message SyncChannelMemberReq {
    string ChannelID = 1;
    repeated string MemberList = 2;
}

message SyncChannelMemberRsp {
    enum SyncChannelMember {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        CHANNEL_ID_INVALID = 2;
    }
    chat.pb.SyncChannelMemberRsp.SyncChannelMember Code = 1;
    string Msg = 2;
    string ChannelID = 3;
}

message ChannelBanReq {
    string ChannelID = 1;
    bool IsBan = 2;
    repeated string BlackList = 3;
    repeated string WhiteList = 4;
}

message ChannelBanRsp {
    enum ChannelBanCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        CHANNEL_ID_INVALID = 2;
    }
    chat.pb.ChannelBanRsp.ChannelBanCode Code = 1;
    string Msg = 2;
    string ChannelID = 3;
}

message ChannelGroupBanReq {
    string GroupID = 1;
    string ClientID = 2;
    bool IsBan = 3;
}

message ChannelGroupBanRsp {
    enum ChannelGroupBan {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        GROUP_ID_INVALID = 2;
    }
    chat.pb.ChannelGroupBanRsp.ChannelGroupBan Code = 1;
    string Msg = 2;
    string GroupID = 3;
    string ClientID = 4;
}

message PersonalBanReq {
    string ClientID = 1;
    bool IsBan = 2;
    uint32 BanTime = 3;
}

message PersonalBanRsp {
    enum PersonalBanCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
    }
    chat.pb.PersonalBanRsp.PersonalBanCode Code = 1;
    string Msg = 2;
    string ClientID = 3;
}

message GetPersonalChannelLevelReq {
    string ChannelID = 1;
    string ClientID = 2;
}

message GetPersonalChannelLevelRsp {
    enum GetPersonalChannelLevelCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        CHANNEL_ID_INVALID = 2;
    }
    chat.pb.GetPersonalChannelLevelRsp.GetPersonalChannelLevelCode Code = 1;
    string Msg = 2;
    uint32 Level = 3;
    string ChannelID = 4;
    string ClientID = 5;
}

message UpdatePersonalChannelLevelReq {
    string ChannelID = 1;
    string ClientID = 2;
    uint32 Level = 3;
}

message UpdatePersonalChannelLevelRsp {
    enum UpdatePersonalChannelLevelCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
        CHANNEL_ID_INVALID = 2;
    }
    chat.pb.UpdatePersonalChannelLevelRsp.UpdatePersonalChannelLevelCode Code = 1;
    string Msg = 2;
    string ChannelID = 3;
    string ClientID = 4;
}

message SyncUserChannelReq {
    string ClientID = 1;
    repeated string ChannelIDList = 2;
}

message SyncUserChannelRsp {
    enum SyncUserChannelCode {
        SUCCESS = 0;
        NOT_REGISTER = 1;
    }
    chat.pb.SyncUserChannelRsp.SyncUserChannelCode Code = 1;
    string Msg = 2;
    string ClientID = 3;
}

message SystemPrivateChatReq {
    string ToClientID = 1;
    string Msg = 2;
}

message SystemPrivateChatRsp {
    enum PrivateChatCode {
        SUCCESS = 0;
        INNER_ERR = 1;
        NOT_REGISTER = 2;
    }
    chat.pb.SystemPrivateChatRsp.PrivateChatCode Code = 1;
    string Msg = 2;
    string ToClientID = 3;
}

message SystemChannelChatReq {
    string ChannelID = 1;
    string Msg = 2;
}

message SystemChannelChatRsp {
    enum ChannelChatCode {
        SUCCESS = 0;
        INNER_ERR = 1;
        NOT_REGISTER = 2;
        CHANNEL_ID_INVALID = 3;
    }
    chat.pb.SystemChannelChatRsp.ChannelChatCode Code = 1;
    string Msg = 2;
    string ChannelID = 3;
}

message SystemWorldChatReq {
    string Msg = 1;
}

message SystemWorldChatRsp {
    enum WorldChatCode {
        SUCCESS = 0;
        INNER_ERR = 1;
        NOT_REGISTER = 2;
    }
    chat.pb.SystemWorldChatRsp.WorldChatCode Code = 1;
    string Msg = 2;
}

message CreateChannelGroupReq {
    string GroupID = 1;
    uint32 DefaultChannelCount = 2;
    uint32 MaxChannelMemberCount = 3;
}

message CreateChannelGroupRsp {
    enum CreateChannelCode {
        SUCCESS = 0;
        INNER_ERR = 1;
        NOT_REGISTER = 2;
        ALREADY_CREATE = 3;
    }
    chat.pb.CreateChannelGroupRsp.CreateChannelCode Code = 1;
    string Msg = 2;
    string GroupID = 3;
}

message DelChannelGroupReq {
    string GroupID = 1;
}

message DelChannelGroupRsp {
    enum CreateChannelCode {
        SUCCESS = 0;
        INNER_ERR = 1;
        NOT_REGISTER = 2;
        GROUP_ID_INVALID = 3;
    }
    chat.pb.DelChannelGroupRsp.CreateChannelCode Code = 1;
    string Msg = 2;
    string GroupID = 3;
}

message ClearUserReq {
    string UserID = 1;
}

message ClearUserRsp {
    enum ClearUserCode {
        SUCCESS = 0;
        INNER_ERR = 1;
        NOT_REGISTER = 2;
        USER_ID_INVALID = 3;
    }
    chat.pb.ClearUserRsp.ClearUserCode Code = 1;
    string Msg = 2;
    string UserID = 3;
}

message UserIDRegisterReq {
    repeated string UserIDList = 1;
}

message UserIDRegisterRsp {
    enum UserIDRegisterCode {
        SUCCESS = 0;
        SERVER_NOT_REGISTER = 1;
    }
    chat.pb.UserIDRegisterRsp.UserIDRegisterCode Code = 1;
    string Msg = 2;
}

message CrossPrivateChatReq {
    string FromClientID = 1;
    bytes Baseinfo = 2;
    string ToGroupID = 3;
    string ToClientID = 4;
    string Msg = 5;
}

message CrossPrivateChatRsp {
    enum CrossPrivateChatCode {
        SUCCESS = 0;
        INNER_ERR = 1;
        NOT_REGISTER = 2;
        IN_BAN = 3;
        CD_LIMIT = 4;
    }
    chat.pb.CrossPrivateChatRsp.CrossPrivateChatCode Code = 1;
    string Msg = 2;
    string FromClientID = 3;
    string ToGroupID = 4;
    string ToClientID = 5;
    uint32 LeftCdTime = 6;
}

enum CHAT_SERVER_CMD {
    CHAT_SERVER_CMD_INVALID = 0;
    CHAT_SERVER_REGISTER_REQ = 201;
    CHAT_SERVER_REGISTER_RSP = 202;
    CHAT_SERVER_GET_CLIENT_TOKEN_REQ = 203;
    CHAT_SERVER_GET_CLIENT_TOKEN_RSP = 204;
    CHAT_SERVER_CREATE_CHANNEL_REQ = 205;
    CHAT_SERVER_CREATE_CHANNEL_RSP = 206;
    CHAT_SERVER_DEL_CHANNEL_REQ = 207;
    CHAT_SERVER_DEL_CHANNEL_RSP = 208;
    CHAT_SERVER_JOIN_CHANNEL_REQ = 209;
    CHAT_SERVER_JOIN_CHANNEL_RSP = 210;
    CHAT_SERVER_OUT_CHANNEL_REQ = 211;
    CHAT_SERVER_OUT_CHANNEL_RSP = 212;
    CHAT_SERVER_GET_CHANNEL_MEMBER_REQ = 213;
    CHAT_SERVER_GET_CHANNEL_MEMBER_RSP = 214;
    CHAT_SERVER_SYNC_CHANNEL_MEMBER_REQ = 215;
    CHAT_SERVER_SYNC_CHANNEL_MEMBER_RSP = 216;
    CHAT_SERVER_ADD_BLACKLIST_REQ = 217;
    CHAT_SERVER_ADD_BLACKLIST_RSP = 218;
    CHAT_SERVER_REMOVE_BLACKLIST_REQ = 219;
    CHAT_SERVER_REMOVE_BLACKLIST_RSP = 220;
    CHAT_SERVER_GET_BLACKLIST_REQ = 221;
    CHAT_SERVER_GET_BLACKLIST_RSP = 222;
    CHAT_SERVER_SYNC_BLACKLIST_REQ = 223;
    CHAT_SERVER_SYNC_BLACKLIST_RSP = 224;
    CHAT_SERVER_CHANNEL_BAN_REQ = 225;
    CHAT_SERVER_CHANNEL_BAN_RSP = 226;
    CHAT_SERVER_CHANNEL_GROUP_BAN_REQ = 227;
    CHAT_SERVER_CHANNEL_GROUP_BAN_RSP = 228;
    CHAT_SERVER_PERSONAL_BAN_REQ = 229;
    CHAT_SERVER_PERSONAL_BAN_RSP = 230;
    CHAT_SERVER_GET_PERSONAL_BAN_INFO_REQ = 231;
    CHAT_SERVER_GET_PERSONAL_BAN_INFO_RSP = 232;
    CHAT_SERVER_GET_PERSONAL_CHANNEL_LEVEL_REQ = 233;
    CHAT_SERVER_GET_PERSONAL_CHANNEL_LEVEL_RSP = 234;
    CHAT_SERVER_UPDATE_PERSONAL_CHANNEL_LEVEL_REQ = 235;
    CHAT_SERVER_UPDATE_PERSONAL_CHANNEL_LEVEL_RSP = 236;
    CHAT_SERVER_SYNC_USER_CHANNEL_REQ = 237;
    CHAT_SERVER_SYNC_USER_CHANNEL_RSP = 238;
    CHAT_SERVER_SYSTEM_PRIVATE_CHAT_REQ = 239;
    CHAT_SERVER_SYSTEM_PRIVATE_CHAT_RSP = 240;
    CHAT_SERVER_SYSTEM_CHANNEL_CHAT_REQ = 241;
    CHAT_SERVER_SYSTEM_CHANNEL_CHAT_RSP = 242;
    CHAT_SERVER_SYSTEM_WORLD_CHAT_REQ = 243;
    CHAT_SERVER_SYSTEM_WORLD_CHAT_RSP = 244;
    CHAT_SERVER_CREATE_CHANNEL_GROUP_REQ = 245;
    CHAT_SERVER_CREATE_CHANNEL_GROUP_RSP = 246;
    CHAT_SERVER_DEL_CHANNEL_GROUP_REQ = 247;
    CHAT_SERVER_DEL_CHANNEL_GROUP_RSP = 248;
    CHAT_SERVER_GET_CHANNEL_GROUP_INFO_REQ = 249;
    CHAT_SERVER_GET_CHANNEL_GROUP_INFO_RSP = 250;
    CHAT_SERVER_CHANNEL_GROUP_SWITCH_REQ = 251;
    CHAT_SERVER_CHANNEL_GROUP_SWITCH_RSP = 252;
    CHAT_SERVER_DEL_PRIVATE_CHAT_RECORD_REQ = 253;
    CHAT_SERVER_DEL_PRIVATE_CHAT_RECORD_RSP = 254;
    CHAT_SERVER_DEL_CHANNEL_CHAT_RECORD_REQ = 255;
    CHAT_SERVER_DEL_CHANNEL_CHAT_RECORD_RSP = 256;
    CHAT_SERVER_DEL_WORLD_CHAT_RECORD_REQ = 257;
    CHAT_SERVER_DEL_WORLD_CHAT_RECORD_RSP = 258;
    CHAT_SERVER_CLEAR_USER_REQ = 259;
    CHAT_SERVER_CLEAR_USER_RSP = 260;
    CHAT_SERVER_USERID_REGISTER_REQ = 261;
    CHAT_SERVER_USERID_REGISTER_RSP = 262;
    CHAT_SERVER_CROSS_PRIVATE_CHAT_REQ = 263;
    CHAT_SERVER_CROSS_PRIVATE_CHAT_RSP = 264;
}

